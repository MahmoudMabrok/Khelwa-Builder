name: Build And Release

on:
  push:
    branches:
      - main
    paths:
      - '**/*.py'
  pull_request:
    branches:
      - main
    paths:
      - '**/*.py'
  workflow_dispatch:    

jobs:
  build:
    strategy:
      matrix:
        os: [ macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build executable
        id: build
        run: |
          python -m PyInstaller --onefile app.py
        shell: bash

      - name: Upload artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@v4
        with:
          name: app-${{ matrix.os }}-build
          path: dist/app*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create Release Tag
        id: tag
        run: |
          TAG_NAME="v$(date +'%Y%m%d%H%M%S')"
          echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV
          git tag $TAG_NAME
          git push origin $TAG_NAME

      - name: Download macOS artifact
        uses: actions/download-artifact@v4
        with:
          name: app-macos-latest-build
          path: ./dist/macos

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: app-windows-latest-build
          path: ./dist/windows

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          files: |
            ./dist/macos/*
            ./dist/windows/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
